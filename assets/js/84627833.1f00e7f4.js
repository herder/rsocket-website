"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[139],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),l=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),k=l(r),b=o,d=k["".concat(a,".").concat(b)]||k[b]||u[b]||c;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=k;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},5743:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>s,contentTitle:()=>a,metadata:()=>l,toc:()=>p,default:()=>k});var n=r(7462),o=r(3366),c=(r(7294),r(3905)),i=["components"],s={slug:"/guides/rsocket-py/client/rsocket-websocket-client",title:"RSocketWebsocketClient - rsocket-py",sidebar_label:"WebSocket Client"},a=void 0,l={unversionedId:"guides/rsocket-py/client/rsocket-websocket-client",id:"guides/rsocket-py/client/rsocket-websocket-client",isDocsHomePage:!1,title:"RSocketWebsocketClient - rsocket-py",description:"The RSocketWebsocketClient implements the RSocket protocol using the WebSocket network transport protocol, and is suitable for Server to Server, and Client to Server scenarios where raw TCP is not available, such as in a web browser.",source:"@site/content-docs/guides/rsocket-py/client/rsocket-websocket-client.mdx",sourceDirName:"guides/rsocket-py/client",slug:"/guides/rsocket-py/client/rsocket-websocket-client",permalink:"/guides/rsocket-py/client/rsocket-websocket-client",editUrl:"https://github.com/rsocket/rsocket-website/edit/master/content-docs/guides/rsocket-py/client/rsocket-websocket-client.mdx",tags:[],version:"current",lastUpdatedBy:"Gabriel Shaar",lastUpdatedAt:1643971390,formattedLastUpdatedAt:"2/4/2022",frontMatter:{slug:"/guides/rsocket-py/client/rsocket-websocket-client",title:"RSocketWebsocketClient - rsocket-py",sidebar_label:"WebSocket Client"},sidebar:"docs",previous:{title:"TCP Client",permalink:"/guides/rsocket-py/client/rsocket-tcp-client"},next:{title:"Introduction",permalink:"/guides/rsocket-py/server"}},p=[{value:"WebSocket Client Quick Start Example",id:"websocket-client-quick-start-example",children:[]}],u={toc:p};function k(e){var t=e.components,r=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"RSocketWebsocketClient")," implements the RSocket protocol using the WebSocket network transport protocol, and is suitable for Server to Server, and Client to Server scenarios where raw TCP is not available, such as in a web browser."),(0,c.kt)("h3",{id:"websocket-client-quick-start-example"},"WebSocket Client Quick Start Example"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-py"},"import asyncio\n\nfrom rsocket.payload import Payload\nfrom rsocket.transports.aiohttp_websocket import websocket_client\n\n\nasync def application():\n    async with websocket_client('http://localhost:6565') as client:\n        result = await client.request_response(Payload(b'ping'))\n        print(result)\n\n\nif __name__ == '__main__':\n    asyncio.run(application())\n")))}k.isMDXComponent=!0}}]);